[{"/media/mohammad/New Volume/Programming/VsCode/Practices/React JS/Weather/src/index.js":"1","/media/mohammad/New Volume/Programming/VsCode/Practices/React JS/Weather/src/App.js":"2","/media/mohammad/New Volume/Programming/VsCode/Practices/React JS/Weather/src/Contexts/AppContext.js":"3","/media/mohammad/New Volume/Programming/VsCode/Practices/React JS/Weather/src/Contexts/AuthContext.js":"4","/media/mohammad/New Volume/Programming/VsCode/Practices/React JS/Weather/src/Firebase.js":"5","/media/mohammad/New Volume/Programming/VsCode/Practices/React JS/Weather/src/components/Signup.jsx":"6","/media/mohammad/New Volume/Programming/VsCode/Practices/React JS/Weather/src/components/Home.jsx":"7","/media/mohammad/New Volume/Programming/VsCode/Practices/React JS/Weather/src/components/Login.jsx":"8","/media/mohammad/New Volume/Programming/VsCode/Practices/React JS/Weather/src/components/watchlist.jsx":"9","/media/mohammad/New Volume/Programming/VsCode/Practices/React JS/Weather/src/components/City.jsx":"10","/media/mohammad/New Volume/Programming/VsCode/Practices/React JS/Weather/src/components/Daily.jsx":"11","/media/mohammad/New Volume/Programming/VsCode/Practices/React JS/Weather/src/components/Hourly.jsx":"12","/media/mohammad/New Volume/Programming/VsCode/Practices/React JS/Weather/src/components/PrivateRoute.js":"13"},{"size":438,"mtime":1614499519806,"results":"14","hashOfConfig":"15"},{"size":2460,"mtime":1614593980962,"results":"16","hashOfConfig":"15"},{"size":6573,"mtime":1614589091758,"results":"17","hashOfConfig":"15"},{"size":1060,"mtime":1614595461359,"results":"18","hashOfConfig":"15"},{"size":573,"mtime":1614500798841,"results":"19","hashOfConfig":"15"},{"size":2432,"mtime":1614594824046,"results":"20","hashOfConfig":"15"},{"size":3632,"mtime":1614596808626,"results":"21","hashOfConfig":"15"},{"size":1827,"mtime":1614596203347,"results":"22","hashOfConfig":"15"},{"size":3553,"mtime":1614504586556,"results":"23","hashOfConfig":"15"},{"size":3528,"mtime":1614499087350,"results":"24","hashOfConfig":"15"},{"size":4300,"mtime":1614499092054,"results":"25","hashOfConfig":"15"},{"size":4004,"mtime":1614499096897,"results":"26","hashOfConfig":"15"},{"size":462,"mtime":1614596343947,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"kjutbh",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/media/mohammad/New Volume/Programming/VsCode/Practices/React JS/Weather/src/index.js",[],["59","60"],"/media/mohammad/New Volume/Programming/VsCode/Practices/React JS/Weather/src/App.js",[],"/media/mohammad/New Volume/Programming/VsCode/Practices/React JS/Weather/src/Contexts/AppContext.js",["61","62","63","64"],"import React, { useState,useEffect ,createContext } from \"react\";\nimport { message } from \"antd\";\nimport axios from \"axios\";\nimport Swal from 'sweetalert';\n\nexport const AppContext = createContext();\n\n\nexport const AppProvider = (props) => {\n\n\n// ---------------------------------------------------States---------------------------------------\n  const [query, setQuery] = useState(\"\");\n  const [city, setCity] = useState(null);\n  const [queryActive, setQueryActive] = useState(false);\n  const [menuOpen, setMenuOpen] = useState(false);\n  const [watchlist, setWatchlist] = useState(JSON.parse(localStorage.getItem('watchlist')));\n  const [showWatchList, setShowWatchList] = useState(null);\n  const [coord , setCoord]=useState('');\n  const [forecast , setForecast]=useState(null);\n  const [showForecast , setShowForecast]=useState(0);\n  const [time , setTime]=useState([]);\n  const [dateDay , setDateDay]=useState([]);\n  const [profileModal , setProfileModal]=useState(false);\n\n\n//----------------------------------------------Component Did Mount----------------------------------\n  useEffect(() => {\n    getTime();\n    getDate();\n  }, [])\n\n\n//------------------------------------------------get city data--------------------------------------\n  const getData = async (e) => {\n    e.preventDefault();\n    if(query===\"\"){\n      Swal('Enter a city name!')\n    }else{\n    await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${query}&appid=498e14c3edcd5cadea0be9209c066677`)\n    .then(function (response){\n      setCity(response.data);\n      setCoord({lat:JSON.stringify(response.data.coord.lat) , lon:JSON.stringify(response.data.coord.lon)});\n    });\n    setQueryActive(true);\n    setShowForecast(0);\n  }}\n\n\n//---------------------------------------------show hourly forecast---------------------------------\n  const showHourly= async () => {\n    setShowForecast(1);\n    const response = await axios.get(`https://api.openweathermap.org/data/2.5/onecall?lat=${coord.lat}&lon=${coord.lon}&appid=498e14c3edcd5cadea0be9209c066677`);\n    setForecast(response.data);\n    console.log(forecast);\n  }\n\n\n//----------------------------------------------show daily forecast---------------------------------\n  const showDaily=async()=>{\n    setShowForecast(2);\n    const response = await axios.get(`https://api.openweathermap.org/data/2.5/onecall?lat=${coord.lat}&lon=${coord.lon}&appid=498e14c3edcd5cadea0be9209c066677`);\n    setForecast(response.data);\n    console.log(forecast);\n  }\n\n\n//--------------------------------------------------get hour-----------------------------------------\n  const getTime=()=>{\n    let date=new Date();\n    let hour=date.getHours();\n    for(let i=0;i<=47;i++){\n      if(hour===25){\n        hour=1\n      }\n    time.push(JSON.stringify(hour++))\n    }\n  }\n  \n\n//--------------------------------------------------get day------------------------------------------\n  const getDate=()=>{\n    let date = new Date();\n    let day = date.getDay();\n    let insideDay=[];\n    insideDay.push(day);\n    for(let i=0 ; i<7 ; i++){\n      if(day===6){\n        day=-1\n      }\n      day++;\n      insideDay.push(day);\n    }\n    insideDay.map((item)=>{\n      switch (item) {\n        case 0:\n          dateDay.push('Sunday');\n          break;\n        case 1:\n          dateDay.push('Monday');\n          break;\n        case 2:\n          dateDay.push('Tuesday');\n          break;\n        case 3:\n          dateDay.push('Wednesday');\n          break;\n        case 4:\n          dateDay.push('Thursday');\n          break;\n        case 5:\n          dateDay.push('Friday');\n          break;\n        case 6:\n          dateDay.push('Saturday');\n          break;\n        default:\n          break;\n      }\n    })\n  }\n\n\n//-----------------------------------------------get query value-------------------------------------\n  const getQuery = (e) => {\n    setQuery(e.target.value);\n  };\n\n\n//----------------------------------------------close and open menu----------------------------------\n  const openMenu = () => {\n    setMenuOpen(true);\n  };\n\n  const closeMenu = () => {\n    setMenuOpen(false);\n  };\n\n\n//-------------------------------------------add city to Watchlist-----------------------------------\n  const addToWatch = (city) => {\n    message.success(\"Added to Watchlist\");\n    setWatchlist(Array.from(new Set(watchlist.map(a => a.id)))\n    .map(id => {\n    return watchlist.find(a => a.id === id)}));\n    watchlist.push({name:city.name , id:city.id});\n    localStorage.setItem('watchlist',JSON.stringify(watchlist));\n    console.log(watchlist);\n  };\n\n\n// ------------------------------------------------load watchlist-------------------------------------\n  const loadWatchList=async()=>{\n      const showWatchListinside = [];\n      for(let i=0 ; i<watchlist.length;i++){\n        let response = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${watchlist[i].name}&appid=498e14c3edcd5cadea0be9209c066677`)\n        showWatchListinside.push(response.data);\n      }\n      setShowWatchList(showWatchListinside);\n  }\n\n\n//-------------------------------------------remove city from Watchlist-------------------------------\n  const removeFromWatch=(city)=>{\n    const filterWatch = showWatchList;\n    const filterWatchName=watchlist;\n    setShowWatchList(\n    filterWatch.filter((item)=>(item.id!==city.id))\n    )\n    setWatchlist(\n    filterWatchName.filter((item)=>(item.id!==city.id))\n    )\n    localStorage.setItem('watchlist',JSON.stringify(filterWatchName.filter((item)=>(item.id!==city.id))));\n    console.log(watchlist);\n  }\n\n\n//-------------------------------------------cancel pop confirm---------------------------------------\n  const cancel = () => {\n    message.error(\"Not Added\");\n  };\n\n\n//----------------------------------------------profile modal-----------------------------------------\n  const openProfileModal=()=>{\n    setProfileModal(true);\n  }\n\n  const closeProfileModal=()=>{\n    setProfileModal(false);\n  }\n//--------------------------------------------Pass to Provider----------------------------------------\n  const value = {\n    getData,\n    query,\n    getQuery,\n    city,\n    queryActive,\n    openMenu,\n    closeMenu,\n    menuOpen,\n    addToWatch,\n    cancel,\n    watchlist,\n    showWatchList,\n    removeFromWatch,\n    loadWatchList,\n    showHourly,\n    showDaily,\n    showForecast,\n    setShowForecast,\n    forecast,\n    time,\n    dateDay,\n    profileModal,\n    openProfileModal,\n    closeProfileModal,\n    setProfileModal\n  };\n\n\n\n  return (\n    <AppContext.Provider value={value}>{props.children}</AppContext.Provider>\n  );\n};\n","/media/mohammad/New Volume/Programming/VsCode/Practices/React JS/Weather/src/Contexts/AuthContext.js",[],"/media/mohammad/New Volume/Programming/VsCode/Practices/React JS/Weather/src/Firebase.js",[],"/media/mohammad/New Volume/Programming/VsCode/Practices/React JS/Weather/src/components/Signup.jsx",["65","66"],"import React,{useRef , useState , useContext} from 'react';\nimport {Form, Button} from 'react-bootstrap';\nimport {useAuth} from '../Contexts/AuthContext';\nimport Fade from 'react-reveal';\nimport {Link, Redirect , useHistory} from 'react-router-dom';\nimport {message} from 'antd';\nimport swal from 'sweetalert';\n\n\nconst Signup = () =>{\n\nconst emailRef = useRef();\nconst passwordRef = useRef();\nconst passwordConfirmRef = useRef();\nconst {signup} = useAuth();\nconst [error , setError]=useState(\"\");\nconst [loading , setLoading]=useState(false);\nlet history = useHistory();\n\n\nconst handleSubmit= async (e) => {\n    e.preventDefault();\n    if(passwordRef.current.value !== passwordConfirmRef.current.value){\n        return setError('passowrd do not match');\n    }\n    try{\n        setError(\"\");\n        setLoading(true)\n        await signup(emailRef.current.value , passwordRef.current.value)\n        swal({\n            title: \"Done!\",\n            text: \"Your account has created successfuly\",\n            icon: \"success\",\n            button: history.push('/login'),\n          });\n    }catch{\n        setError(\"Failed to create an account\")\n    }\n    setLoading(false);\n}\n\n\n    return(\n\n    <div className='forms-wrapper'>\n        <Fade>\n        <div className='forms'>\n            <h2 className='text-center mt-2 mb-4'>Sign Up</h2>\n            {error && message.error(error)}\n            <Form onSubmit={handleSubmit}>\n                <Form.Group id=\"email\">\n                    <Form.Label>Email</Form.Label>\n                    <Form.Control type=\"email\" ref={emailRef} required />\n                </Form.Group>\n                <Form.Group id=\"password\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type=\"password\" ref={passwordRef} required />\n                </Form.Group>\n                <Form.Group id=\"password-confirm\">\n                    <Form.Label>Password Confirmation</Form.Label>\n                    <Form.Control type=\"password\" ref={passwordConfirmRef} required />\n                </Form.Group>\n                <Button disabled={loading} type=\"submit\" className=\"w-100\">Sign Up</Button>\n            </Form>\n        </div>\n        <div className='w-100 text-center text-white mt-3'>Already have an account?\n        <Link className='text-white bold' style={{fontSize:'16px'}} to=\"/login\">Log In</Link> \n        </div>\n        </Fade>\n    </div>\n\n    )\n}\nexport default Signup;","/media/mohammad/New Volume/Programming/VsCode/Practices/React JS/Weather/src/components/Home.jsx",["67","68"],"/media/mohammad/New Volume/Programming/VsCode/Practices/React JS/Weather/src/components/Login.jsx",["69","70"],"/media/mohammad/New Volume/Programming/VsCode/Practices/React JS/Weather/src/components/watchlist.jsx",["71"],"import React,{useContext,useEffect} from 'react';\nimport {AppContext} from '../Contexts/AppContext';\nimport {v4 as uuidv4} from 'uuid';\nimport {Popconfirm, Spin} from 'antd';\nimport Zoom from 'react-reveal';\n\n\nconst Watchlist=()=>{\n\n    const{\n        showWatchList,\n        removeFromWatch,\n        cancel,\n        loadWatchList\n        }=useContext(AppContext)\n\n        useEffect(()=>{\n            loadWatchList();\n            },[])\n\n        let watchlistData = <Spin tip='Loading...' size='large'/>\n        if(showWatchList){\n            watchlistData = \n            <Zoom>\n            <div className='watchlist-wrapper'>\n                {showWatchList && showWatchList.map((city)=>(\n                            <div key={uuidv4()} className='watch-city-box mb-3'>\n                            <div className=\"city-info\">\n                                <div className='d-flex'>\n                                    <div className='d-flex flex-column w-50 text-center'>\n                                        <span className='city-name mr-3'>{city.name}</span>\n                                        <span style={{fontSize:38+'px'}} className='m-0'>{Math.floor(city.main.temp - 273.15)+'°'}<strong style={{fontSize:18+'px'}}>C</strong></span>\n                                    </div>\n                                    <div className='text-center pl-4' style={{width:30+'%'}}>\n                                        {city.weather.map((weather)=>(\n                                        <img key={weather.id} className='w-100' src={`http://openweathermap.org/img/w/${weather.icon}.png`} alt='weather icon'/>\n                                        ))}\n                                        {city.weather.map((weather)=>(\n                                        <small key={weather.id}>{weather.main}</small>\n                                        ))}                        \n                                    </div>\n                                </div>\n                                <small className='mb-3'>{Date()}</small>\n                                <Popconfirm\n                                    title=\"Do you want to delete from Watchlist?\"\n                                    onConfirm={()=>removeFromWatch(city)}\n                                    onCancel={cancel}\n                                    okText=\"Yes\"\n                                    cancelText=\"No\"\n                                >\n                                    <button className='btn btn-outline-danger btn-sm'>Remove from Watchlist</button>\n                                </Popconfirm>\n                            </div>\n                            <div className=\"city-weather\">\n                                <div className='watchLater-details'><h5>Wind</h5><span>{Math.floor(city.wind.speed)}{\" \"} km/h</span></div>\n                                <div className='watchLater-details'><h5>Humidity</h5><span>{Math.floor(city.main.humidity)}</span></div>\n                                <div className='watchLater-details'><h5>Pressure</h5><span>{Math.floor(city.main.pressure)}{\" \"}M</span></div>\n                                <div className='watchLater-details'><h5>Feels like</h5><span>{Math.floor(city.main.temp - 273.15)+'°'}<strong style={{fontSize:14+'px'}}>C</strong></span></div>\n                            </div>\n                        </div>\n                ))}\n        </div>\n        </Zoom>\n        }\n\n    return(\n        <React.Fragment>\n            {watchlistData}\n        </React.Fragment>\n    )\n}\nexport default Watchlist;","/media/mohammad/New Volume/Programming/VsCode/Practices/React JS/Weather/src/components/City.jsx",[],"/media/mohammad/New Volume/Programming/VsCode/Practices/React JS/Weather/src/components/Daily.jsx",[],"/media/mohammad/New Volume/Programming/VsCode/Practices/React JS/Weather/src/components/Hourly.jsx",["72","73"],"import React,{useContext,useEffect} from 'react';\nimport {AppContext} from '../Contexts/AppContext';\nimport {v4 as uuidv4} from 'uuid';\nimport WindImage from '../Assets/images/wind-solid.svg';\nimport WindStatus from '../Assets/images/cloud-sun-solid.svg';\nimport Humidity from '../Assets/images/water-solid.svg';\nimport Zoom from 'react-reveal';\n\n\nconst Hourly =()=>{\n\n\n    const{\n        setShowForecast,\n        forecast,\n        time\n    }=useContext(AppContext)\n\n\n\n    return(\n        <React.Fragment>\n            <Zoom>\n                <div onClick={()=>setShowForecast(0)} className='forecast-close-btn'><i className=\"fa fa-chevron-up\"></i></div>\n                    <div className='hourly-wrapper'>\n                        <div className='time-wrapper'>\n                            <div className='time-item border-bottom-0 mb-5' style={{backgroundColor:'rgb(240, 238, 238)'}}>\n                                <span className='forecast-title'>Time</span>\n                                <i style={{fontSize:36+'px'}} className=\"fa fa-clock-o\"></i>\n                            </div>\n                            {time.map((item)=>(\n                                <div className='time-item text-secondary ' key={uuidv4()}><span style={{fontSize:22+'px',fontWeight:900,color:'slategrey'}}>{item}</span></div>\n                            ))}\n                        </div>\n                        <div className='forecast-container'>\n                            <div className='forecast-item border-bottom-0 mb-5'>\n                                <div>\n                                    <span className='forecast-title'>Temp</span>\n                                    <i style={{fontSize:36+'px'}} className=\"fa fa-thermometer-half\"></i>\n                                </div>\n                                <div>\n                                    <span className='forecast-title'>Description</span>\n                                    <img style={{width:30+'px'}} src={WindStatus} alt=\"wind description\"/>\n                                </div>\n                                <div>\n                                    <span className='forecast-title'>Wind</span>\n                                    <img style={{width:30+'px'}} src={WindImage} alt=\"wind image\"/>\n                                </div>\n                                <div>\n                                    <span className='forecast-title'>Humidity</span>\n                                    <img style={{width:30+'px'}} src={Humidity} alt=\"humidity\"/>\n                                </div>\n                            </div>\n                            {forecast && forecast.hourly.map((item)=>(\n                                    <div key={uuidv4()} id='forecast-item' className='forecast-item text-secondary'>\n                                        <div>\n                                            <span>{Math.floor(item.temp - 273.15)+'°'}<strong style={{fontSize:16+'px'}}>C</strong></span>\n                                        </div>\n                                        <div>\n                                            <span>{item.weather[0].description}\n                                                <img style={{width:30+'px'}} src={`http://openweathermap.org/img/w/${item.weather[0].icon}.png`} alt='weather icon'/>\n                                            </span>\n                                        </div>\n                                        <div>\n                                            <span>{Math.floor(item.wind_speed)}{\" \"} km/h</span>    \n                                        </div>\n                                        <div>\n                                            <span>{item.humidity} {\" \"} %</span>\n                                        </div>\n                                    </div>\n                            ))}\n                        </div>\n                    </div>\n                    </Zoom>\n        </React.Fragment>\n    )\n}\nexport default Hourly;","/media/mohammad/New Volume/Programming/VsCode/Practices/React JS/Weather/src/components/PrivateRoute.js",["74"],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":22,"column":17,"nodeType":"81","messageId":"82","endLine":22,"endColumn":24},{"ruleId":"79","severity":1,"message":"83","line":23,"column":20,"nodeType":"81","messageId":"82","endLine":23,"endColumn":30},{"ruleId":"84","severity":1,"message":"85","line":31,"column":6,"nodeType":"86","endLine":31,"endColumn":8,"suggestions":"87"},{"ruleId":"88","severity":1,"message":"89","line":94,"column":25,"nodeType":"90","messageId":"91","endLine":94,"endColumn":27},{"ruleId":"79","severity":1,"message":"92","line":1,"column":35,"nodeType":"81","messageId":"82","endLine":1,"endColumn":45},{"ruleId":"79","severity":1,"message":"93","line":5,"column":15,"nodeType":"81","messageId":"82","endLine":5,"endColumn":23},{"ruleId":"79","severity":1,"message":"94","line":1,"column":28,"nodeType":"81","messageId":"82","endLine":1,"endColumn":37},{"ruleId":"79","severity":1,"message":"95","line":20,"column":5,"nodeType":"81","messageId":"82","endLine":20,"endColumn":21},{"ruleId":"79","severity":1,"message":"92","line":1,"column":45,"nodeType":"81","messageId":"82","endLine":1,"endColumn":55},{"ruleId":"84","severity":1,"message":"96","line":19,"column":4,"nodeType":"86","endLine":19,"endColumn":6,"suggestions":"97"},{"ruleId":"84","severity":1,"message":"98","line":19,"column":15,"nodeType":"86","endLine":19,"endColumn":17,"suggestions":"99"},{"ruleId":"79","severity":1,"message":"94","line":1,"column":26,"nodeType":"81","messageId":"82","endLine":1,"endColumn":35},{"ruleId":"100","severity":1,"message":"101","line":47,"column":37,"nodeType":"102","endLine":47,"endColumn":100},{"ruleId":"79","severity":1,"message":"103","line":7,"column":25,"nodeType":"81","messageId":"82","endLine":7,"endColumn":32},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"no-unused-vars","'setTime' is assigned a value but never used.","Identifier","unusedVar","'setDateDay' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getDate' and 'getTime'. Either include them or remove the dependency array.","ArrayExpression",["106"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useContext' is defined but never used.","'Redirect' is defined but never used.","'useEffect' is defined but never used.","'openProfileModal' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'currentUser'. Either include it or remove the dependency array.",["107"],"React Hook useEffect has a missing dependency: 'loadWatchList'. Either include it or remove the dependency array.",["108"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'loading' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"109","fix":"110"},{"desc":"111","fix":"112"},{"desc":"113","fix":"114"},"Update the dependencies array to be: [getDate, getTime]",{"range":"115","text":"116"},"Update the dependencies array to be: [currentUser]",{"range":"117","text":"118"},"Update the dependencies array to be: [loadWatchList]",{"range":"119","text":"120"},[1134,1136],"[getDate, getTime]",[538,540],"[currentUser]",[431,433],"[loadWatchList]"]