[{"/media/mohammad/New Volume/Programming/VsCode/Practices/React JS/Weather/src/index.js":"1","/media/mohammad/New Volume/Programming/VsCode/Practices/React JS/Weather/src/App.js":"2","/media/mohammad/New Volume/Programming/VsCode/Practices/React JS/Weather/src/Contexts/AppContext.js":"3","/media/mohammad/New Volume/Programming/VsCode/Practices/React JS/Weather/src/Contexts/AuthContext.js":"4","/media/mohammad/New Volume/Programming/VsCode/Practices/React JS/Weather/src/components/Signup.jsx":"5","/media/mohammad/New Volume/Programming/VsCode/Practices/React JS/Weather/src/components/Home.jsx":"6","/media/mohammad/New Volume/Programming/VsCode/Practices/React JS/Weather/src/components/Login.jsx":"7","/media/mohammad/New Volume/Programming/VsCode/Practices/React JS/Weather/src/components/watchlist.jsx":"8","/media/mohammad/New Volume/Programming/VsCode/Practices/React JS/Weather/src/components/City.jsx":"9","/media/mohammad/New Volume/Programming/VsCode/Practices/React JS/Weather/src/components/Daily.jsx":"10","/media/mohammad/New Volume/Programming/VsCode/Practices/React JS/Weather/src/components/Hourly.jsx":"11","/media/mohammad/New Volume/Programming/VsCode/Practices/React JS/Weather/src/components/PrivateRoute.js":"12","/media/mohammad/New Volume/Programming/VsCode/Practices/React JS/Weather/src/Server.js":"13","/media/mohammad/New Volume/Programming/VsCode/Practices/React JS/Weather/src/components/ForgotPassword.jsx":"14"},{"size":438,"mtime":1614499519806,"results":"15","hashOfConfig":"16"},{"size":4898,"mtime":1614848380746,"results":"17","hashOfConfig":"16"},{"size":7421,"mtime":1614845240214,"results":"18","hashOfConfig":"16"},{"size":1290,"mtime":1614757124315,"results":"19","hashOfConfig":"16"},{"size":2420,"mtime":1614674799121,"results":"20","hashOfConfig":"16"},{"size":3209,"mtime":1614849367479,"results":"21","hashOfConfig":"16"},{"size":2205,"mtime":1614845917104,"results":"22","hashOfConfig":"16"},{"size":3570,"mtime":1614683632252,"results":"23","hashOfConfig":"16"},{"size":3696,"mtime":1614852322728,"results":"24","hashOfConfig":"16"},{"size":4540,"mtime":1614684732448,"results":"25","hashOfConfig":"16"},{"size":3852,"mtime":1614855283022,"results":"26","hashOfConfig":"16"},{"size":525,"mtime":1614841539064,"results":"27","hashOfConfig":"16"},{"size":573,"mtime":1614673137301,"results":"28","hashOfConfig":"16"},{"size":1783,"mtime":1614678879813,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"kjutbh",{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/media/mohammad/New Volume/Programming/VsCode/Practices/React JS/Weather/src/index.js",[],["64","65"],"/media/mohammad/New Volume/Programming/VsCode/Practices/React JS/Weather/src/App.js",["66","67"],"import React, { useContext } from \"react\";\nimport \"./index.css\";\nimport { AppContext } from \"./Contexts/AppContext\";\nimport Fade from 'react-reveal';\nimport { BrowserRouter as Router, Switch, Route ,Link, useHistory } from \"react-router-dom\";\nimport Watchlist from \"./components/watchlist\";\nimport Home from \"./components/Home\";\nimport Signup from \"./components/Signup\";\nimport Login from './components/Login';\nimport Logo from './Assets/images/Logo.png';\nimport PrivateRoute from './components/PrivateRoute';\nimport { AuthContext } from \"./Contexts/AuthContext\";\nimport Avatar from './Assets/images/Male-avatar.png';\nimport Modal from 'react-modal';\nimport ForgotPassword from \"./components/ForgotPassword\";\nimport Zoom from 'react-reveal';\n\n\nconst App = () => {\n\n  const {\n    openMenu,\n    closeMenu,\n    menuOpen,\n    openProfileModal,\n    profileModal,\n    closeProfileModal,\n    setProfileModal,\n    accessUserLocation\n  } = useContext(AppContext);\n\n  const {\n    logout,\n    currentUser\n  }=useContext(AuthContext);\n\n  const handleLogout=()=>{\n    logout();\n    setProfileModal(false);\n  }\n\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <div className=\"navigation\">\n          <Fade left>\n            <ul className={menuOpen ? \"menu-open\" : \"menu-closed\"}>\n              <Link to=\"/\">\n                <li className=\"menu-item\">Home</li>\n              </Link>\n\n              <Link to=\"/watchlist\">\n                <li className=\"menu-item\">WatchList</li>\n              </Link>\n\n              {currentUser &&\n                <Fade left>\n                <Link to='/'\n                  onClick={accessUserLocation}\n                >\n                  <li className=\"menu-item\">Current Location</li>\n                </Link>\n                </Fade>\n              }\n\n              {currentUser &&\n              <Fade left>\n                <a\n                className=\"text-white\"\n                onClick={currentUser && openProfileModal}\n                >\n                  <li className=\"menu-item\">Profile</li>\n                </a>     \n              </Fade>         \n              }\n\n              <Link to=\"/signup\">\n                <li className=\"menu-item\">Create account</li>\n              </Link>\n\n              <a\n                className=\"text-white\"\n                href=\"https://github.com/mohammad6vakili/Weather\"\n              >\n                <li className=\"menu-item\">Source</li>\n              </a>\n\n                {currentUser && \n                  <Fade left>\n                    <Link to=\"/login\">\n                      <li onClick={handleLogout} className=\"menu-item text-danger\">Log Out</li>\n                    </Link>                \n                  </Fade>\n                }\n\n              <button onClick={closeMenu} className=\"menu-close-button\">\n                <i className=\"fa fa-chevron-left\"></i>\n              </button>\n            </ul>\n          </Fade>\n\n          <Fade left>\n            <div\n              className={menuOpen ? \"invisible\" : \"visible\"}\n              id=\"menu-button\"\n            >\n              <i\n                onClick={openMenu}\n                style={{ fontSize: 50 + \"px\", paddingTop: 10 + \"px\" }}\n                className=\"fa fa-bars\"\n              ></i>\n            </div>\n          </Fade>\n          <Fade right>\n            <div className=\"logo\">\n                <img onClick={currentUser && openProfileModal} style={{width:'80px'}} className='mt-4' src={Logo} alt=\"site logo\" />\n                {currentUser && <Fade right><span>Profile</span></Fade>}\n            </div>\n          </Fade>\n        </div>\n\n        <Switch>\n          <PrivateRoute path=\"/\" component={Home} exact />\n          <PrivateRoute path=\"/watchlist\" component={Watchlist} />\n          <Route path=\"/signup\" component={Signup}/>\n          <Route path=\"/login\" component={Login}/>\n          <Route path=\"/forgot-password\" component={ForgotPassword}/>\n        </Switch>\n\n        {profileModal && currentUser && \n        <Modal className=\"profile-modal\" isOpen={true} onRequestClose={closeProfileModal}>\n        <Zoom top>\n          <div className=\"w-100 d-flex flex-column align-items-center justify-content-around h-100\">\n            <div className='w-100 pr-4 d-flex justify-content-end'>\n              <button className='btn btn-danger btn-md pt-2' onClick={closeProfileModal}>X</button>\n            </div>\n            <img className='avatar-image' src={Avatar} alt=\"avatar\"/>\n            <h4 className=\"w-100 text-center\">{currentUser.email}</h4>\n            <Link onClick={()=>{setProfileModal(false)}} className='w-100' to=\"/forgot-password\"><button className='btn btn-outline-dark w-100'>Reset Password</button></Link>\n            <button onClick={handleLogout} className=\"btn btn-outline-danger w-100\">Log Out</button>\n          </div>\n        </Zoom>\n        </Modal>\n        }\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","/media/mohammad/New Volume/Programming/VsCode/Practices/React JS/Weather/src/Contexts/AppContext.js",["68","69","70","71"],"import React, { useState,useEffect ,createContext } from \"react\";\nimport { message } from \"antd\";\nimport axios from \"axios\";\nimport Swal from 'sweetalert';\n\nexport const AppContext = createContext();\n\n\nexport const AppProvider = (props) => {\n\n\n// ---------------------------------------------------States---------------------------------------\n  const [query, setQuery] = useState(\"\");\n  const [city, setCity] = useState(null);\n  const [queryActive, setQueryActive] = useState(false);\n  const [menuOpen, setMenuOpen] = useState(false);\n  const [watchlist, setWatchlist] = useState(JSON.parse(localStorage.getItem('watchlist')));\n  const [showWatchList, setShowWatchList] = useState(null);\n  const [coord , setCoord]=useState('');\n  const [forecast , setForecast]=useState(null);\n  const [showForecast , setShowForecast]=useState(0);\n  const [time , setTime]=useState([]);\n  const [dateDay , setDateDay]=useState([]);\n  const [profileModal , setProfileModal]=useState(false);\n\n\n//----------------------------------------------Component Did Mount----------------------------------\n  useEffect(() => {\n    getTime();\n    getDate();\n  }, [])\n\n\n//-----------------------------------------------get user location-----------------------------------\nconst accessUserLocation=async()=>{\n  await navigator.geolocation.getCurrentPosition((position)=>{\n    axios.get(`https:api.bigdatacloud.net/data/reverse-geocode-client?latitude=${position.coords.latitude}&longitude=${position.coords.longitude}&localityLanguage=en`)\n    .then(res=>\n       axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${res.data.city}&appid=498e14c3edcd5cadea0be9209c066677`)\n      .then(function (response){\n        setCity(response.data);\n        setCoord({lat:JSON.stringify(response.data.coord.lat) , lon:JSON.stringify(response.data.coord.lon)});\n        setQueryActive(true)\n        setShowForecast(0)\n        setQuery(\"Your Location\")\n      }),\n    )\n  })\n  console.log(query);\n}\n\n\n//------------------------------------------------get city data--------------------------------------\n  const getData = async (e) => {\n    e.preventDefault();\n    if(query===\"\"){\n      Swal('Enter a city name!')\n    }else{\n    await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${query}&appid=498e14c3edcd5cadea0be9209c066677`)\n    .then(function (response){\n      setCity(response.data);\n      setCoord({lat:JSON.stringify(response.data.coord.lat) , lon:JSON.stringify(response.data.coord.lon)});\n    });\n    setQueryActive(true);\n    setShowForecast(0);\n  }}\n\n\n//---------------------------------------------show hourly forecast---------------------------------\n  const showHourly= async () => {\n    setShowForecast(1);\n    const response = await axios.get(`https://api.openweathermap.org/data/2.5/onecall?lat=${coord.lat}&lon=${coord.lon}&appid=498e14c3edcd5cadea0be9209c066677`);\n    setForecast(response.data);\n    console.log(forecast);\n  }\n\n\n//----------------------------------------------show daily forecast---------------------------------\n  const showDaily=async()=>{\n    setShowForecast(2);\n    const response = await axios.get(`https://api.openweathermap.org/data/2.5/onecall?lat=${coord.lat}&lon=${coord.lon}&appid=498e14c3edcd5cadea0be9209c066677`);\n    setForecast(response.data);\n    console.log(forecast);\n  }\n\n\n//--------------------------------------------------get hour-----------------------------------------\n  const getTime=()=>{\n    let date=new Date();\n    let hour=date.getHours();\n    for(let i=0;i<=47;i++){\n      if(hour===25){\n        hour=1\n      }\n    time.push(JSON.stringify(hour++))\n    }\n  }\n  \n\n//--------------------------------------------------get day------------------------------------------\n  const getDate=()=>{\n    let date = new Date();\n    let day = date.getDay();\n    let insideDay=[];\n    insideDay.push(day);\n    for(let i=0 ; i<7 ; i++){\n      if(day===6){\n        day=-1\n      }\n      day++;\n      insideDay.push(day);\n    }\n    insideDay.map((item)=>{\n      switch (item) {\n        case 0:\n          dateDay.push('Sunday');\n          break;\n        case 1:\n          dateDay.push('Monday');\n          break;\n        case 2:\n          dateDay.push('Tuesday');\n          break;\n        case 3:\n          dateDay.push('Wednesday');\n          break;\n        case 4:\n          dateDay.push('Thursday');\n          break;\n        case 5:\n          dateDay.push('Friday');\n          break;\n        case 6:\n          dateDay.push('Saturday');\n          break;\n        default:\n          break;\n      }\n    })\n  }\n\n\n//-----------------------------------------------get query value-------------------------------------\n  const getQuery = (e) => {\n    setQuery(e.target.value);\n  };\n\n\n//----------------------------------------------close and open menu----------------------------------\n  const openMenu = () => {\n    setMenuOpen(true);\n  };\n\n  const closeMenu = () => {\n    setMenuOpen(false);\n  };\n\n\n//-------------------------------------------add city to Watchlist-----------------------------------\n  const addToWatch = (city) => {\n    message.success(\"Added to Watchlist\");\n    watchlist.push({name:city.name , id:city.id});\n    setWatchlist(Array.from(new Set(watchlist.map(a => a.id)))\n    .map(id => {\n    return watchlist.find(a => a.id === id)}));\n    localStorage.setItem('watchlist',JSON.stringify(watchlist));\n    console.log(watchlist);\n  };\n\n\n// ------------------------------------------------load watchlist-------------------------------------\n  const loadWatchList=async()=>{\n      const showWatchListinside = [];\n      for(let i=0 ; i<watchlist.length;i++){\n        let response = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${watchlist[i].name}&appid=498e14c3edcd5cadea0be9209c066677`)\n        showWatchListinside.push(response.data);\n      }\n      setShowWatchList(showWatchListinside);\n  }\n\n\n//-------------------------------------------remove city from Watchlist-------------------------------\n  const removeFromWatch=(city)=>{\n    const filterWatch = showWatchList;\n    const filterWatchName=watchlist;\n    setShowWatchList(\n    filterWatch.filter((item)=>(item.id!==city.id))\n    )\n    setWatchlist(\n    filterWatchName.filter((item)=>(item.id!==city.id))\n    )\n    localStorage.setItem('watchlist',JSON.stringify(filterWatchName.filter((item)=>(item.id!==city.id))));\n    console.log(watchlist);\n  }\n\n\n//-------------------------------------------cancel pop confirm---------------------------------------\n  const cancel = () => {\n    message.error(\"Not Added\");\n  };\n\n\n//----------------------------------------------profile modal-----------------------------------------\n  const openProfileModal=()=>{\n    setProfileModal(true);\n  }\n\n  const closeProfileModal=()=>{\n    setProfileModal(false);\n  }\n//--------------------------------------------Pass to Provider----------------------------------------\n  const value = {\n    getData,\n    query,\n    getQuery,\n    city,\n    queryActive,\n    openMenu,\n    closeMenu,\n    menuOpen,\n    addToWatch,\n    cancel,\n    watchlist,\n    showWatchList,\n    removeFromWatch,\n    loadWatchList,\n    showHourly,\n    showDaily,\n    showForecast,\n    setShowForecast,\n    forecast,\n    time,\n    dateDay,\n    profileModal,\n    openProfileModal,\n    closeProfileModal,\n    setProfileModal,\n    accessUserLocation\n  };\n\n\n\n  return (\n    <AppContext.Provider value={value}>{props.children}</AppContext.Provider>\n  );\n};\n","/media/mohammad/New Volume/Programming/VsCode/Practices/React JS/Weather/src/Contexts/AuthContext.js",[],"/media/mohammad/New Volume/Programming/VsCode/Practices/React JS/Weather/src/components/Signup.jsx",[],"/media/mohammad/New Volume/Programming/VsCode/Practices/React JS/Weather/src/components/Home.jsx",["72"],"import React, { useContext , useEffect } from \"react\";\nimport Fade from \"react-reveal\";\nimport Zoom from \"react-reveal\";\nimport City from \"./City\";\nimport { AppContext } from \"../Contexts/AppContext\";\nimport {Spin} from \"antd\";\nimport {AuthContext} from \"../Contexts/AuthContext\";\n\n\nconst Home = () => {\n\n  const {\n    queryActive,\n    getData,\n    query,\n    getQuery,\n    accessUserLocation\n} = useContext(AppContext);\n\n  const {\n    currentUser\n  }=useContext(AuthContext)\n\n  let homeLoaded = <Spin tip='Loading...' size='large'/>\n  if(currentUser){\n    homeLoaded = \n    <div className=\"weather-wrapper mb-5\">\n      \n       {queryActive ? \n        <City />\n       : \n       \n        <div className=\"home-wrapper\">\n          <Zoom>\n            <div className=\"home-anim\">\n              <i id=\"home-cloud\" className=\"fa fa-cloud\"></i>\n              <i id=\"water-one\" className=\"fa fa-tint\"></i>\n              <i id=\"water-two\" className=\"fa fa-tint\"></i>\n              <i id=\"water-three\" className=\"fa fa-tint\"></i>\n              <i id=\"water-four\" className=\"fa fa-tint\"></i>\n              <i id=\"water-five\" className=\"fa fa-tint\"></i>\n              <i id=\"water-six\" className=\"fa fa-tint\"></i>\n              <i id=\"water-seven\" className=\"fa fa-tint\"></i>\n              <i id=\"water-eight\" className=\"fa fa-tint\"></i>\n              <i id=\"water-one-one\" className=\"fa fa-tint\"></i>\n              <i id=\"water-two-two\" className=\"fa fa-tint\"></i>\n              <i id=\"water-three-three\" className=\"fa fa-tint\"></i>\n              <i id=\"water-four-four\" className=\"fa fa-tint\"></i>\n              <i id=\"water-five-five\" className=\"fa fa-tint\"></i>\n              <i id=\"water-six-six\" className=\"fa fa-tint\"></i>\n              <i id=\"water-seven-seven\" className=\"fa fa-tint\"></i>\n              <i id=\"water-eight-eight\" className=\"fa fa-tint\"></i>\n            </div>\n          </Zoom>\n          <Fade bottom>\n            <div>\n              <div className=\"home-title\">Online Weather</div>\n              <div className=\"home-des\">\n                <p style={{ fontSize: 18 + \"px\", textAlign: \"center\" }}>\n                  online weather and optional forecast{\" \"}\n                </p>\n                <p style={{ fontSize: 16 + \"px\", textAlign: \"center\" }}>\n                  save your favorite city on the watchlist\n                </p>\n              </div>\n            </div>\n          </Fade>\n        </div>\n       }\n      <Fade top>\n        <form className=\"search-form\" onSubmit={getData} autoComplete=\"off\">\n          <input\n            className=\"search-box form-control\"\n            value={query}\n            onChange={getQuery}\n            type=\"text\"\n            placeholder=\"All Cities around the World\"\n          />\n          <button type=\"submit\" className=\"search-btn\">\n            <i className=\"fa fa-search\" />\n          </button>\n          <div data-toggle=\"tooltip\" title=\"Your Location\" data-placement=\"top\" onClick={accessUserLocation} className='userLoc-weather-btn'>\n            <i className=\"fa fa-map-marker\"></i>\n          </div>\n        </form>\n      </Fade>\n    </div>\n  }\n\n\n  return (\n    <React.Fragment>\n      {homeLoaded}\n    </React.Fragment>\n  );\n};\nexport default Home;\n","/media/mohammad/New Volume/Programming/VsCode/Practices/React JS/Weather/src/components/Login.jsx",["73","74","75"],"import React,{useRef , useState , useContext , useEffect } from 'react';\nimport {Form, Button } from 'react-bootstrap';\nimport { AuthContext } from '../Contexts/AuthContext';\nimport Fade from 'react-reveal';\nimport {Link , useHistory} from 'react-router-dom';\nimport {message} from \"antd\";\n\nconst Login = () =>{\n\n    const emailRef = useRef();\n    const passwordRef = useRef();\n    const [loading , setLoading]=useState(false);\n    const history = useHistory();\n    const {\n        login,\n        error,\n        setError,\n        setIsLogged,\n        isLogged,\n        currentUser\n            } = useContext(AuthContext);\n\n    useEffect(() => {\n        if(isLogged){\n            history.push(\"/\");    \n        }\n    }, [currentUser]);\n\n    const handleSubmit=async(e)=> {\n    e.preventDefault();\n    try {\n      setError(\"\");\n      setLoading(true);\n      await login(emailRef.current.value, passwordRef.current.value);\n      setIsLogged(true);\n    } catch {\n      setIsLogged(false);\n    }\n      setLoading(false);       \n}\n    \n \n\n    return(\n\n    <div className='forms-wrapper'>\n        <Fade>\n        <div className='forms'>\n            <h2 className='text-center mt-2 mb-4'>Log In</h2>\n            <Form onSubmit={handleSubmit}>\n                <Form.Group id=\"email\">\n                    <Form.Label>Email</Form.Label>\n                    <Form.Control type=\"email\" ref={emailRef} required />\n                </Form.Group>\n                <Form.Group id=\"password\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type=\"password\" ref={passwordRef} required />\n                </Form.Group>\n                <Button disabled={loading} type=\"submit\" className=\"w-100 mt-4\">Log In</Button>\n                <div className='text-center mt-3'>\n                    <Link  to=\"/forgot-password\">\n                        Forgot your password?\n                    </Link>\n                </div>\n            </Form>\n        </div>\n        <div className='w-100 text-center text-white mt-3'>Need an account? \n        <Link style={{fontSize:'16px'}} className='text-white ' to='signup'>Sign UP</Link>\n        </div>\n        </Fade>\n    </div>\n\n    )\n}\nexport default Login;","/media/mohammad/New Volume/Programming/VsCode/Practices/React JS/Weather/src/components/watchlist.jsx",["76"],"import React,{useContext,useEffect} from 'react';\nimport {AppContext} from '../Contexts/AppContext';\nimport {v4 as uuidv4} from 'uuid';\nimport {Popconfirm, Spin} from 'antd';\nimport Zoom from 'react-reveal';\n\n\nconst Watchlist=()=>{\n\n    const{\n        showWatchList,\n        removeFromWatch,\n        cancel,\n        loadWatchList\n        }=useContext(AppContext)\n\n        useEffect(()=>{\n            loadWatchList();\n            },[])\n\n        let watchlistData = <Spin tip='Loading...' size='large'/>\n        if(showWatchList){\n            watchlistData = \n            <Zoom>\n            <div className='watchlist-wrapper'>\n                \n                {showWatchList && showWatchList.map((city)=>(\n                            <div key={uuidv4()} className='watch-city-box mb-3'>\n                            <div className=\"city-info\">\n                                <div className='d-flex'>\n                                    <div className='d-flex flex-column w-50 text-center'>\n                                        <span className='city-name mr-3'>{city.name}</span>\n                                        <span style={{fontSize:38+'px'}} className='m-0'>{Math.floor(city.main.temp - 273.15)+'°'}<strong style={{fontSize:18+'px'}}>C</strong></span>\n                                    </div>\n                                    <div className='text-center pl-4' style={{width:30+'%'}}>\n                                        {city.weather.map((weather)=>(\n                                        <img key={weather.id} className='w-100' src={`http://openweathermap.org/img/w/${weather.icon}.png`} alt='weather icon'/>\n                                        ))}\n                                        {city.weather.map((weather)=>(\n                                        <small key={weather.id}>{weather.main}</small>\n                                        ))}                        \n                                    </div>\n                                </div>\n                                <small className='mb-3'>{Date()}</small>\n                                <Popconfirm\n                                    title=\"Do you want to delete from Watchlist?\"\n                                    onConfirm={()=>removeFromWatch(city)}\n                                    onCancel={cancel}\n                                    okText=\"Yes\"\n                                    cancelText=\"No\"\n                                >\n                                    <button className='btn btn-outline-danger btn-sm'>Remove from Watchlist</button>\n                                </Popconfirm>\n                            </div>\n                            <div className=\"city-weather\">\n                                <div className='watchLater-details'><h5>Wind</h5><span>{Math.floor(city.wind.speed)}{\" \"} km/h</span></div>\n                                <div className='watchLater-details'><h5>Humidity</h5><span>{Math.floor(city.main.humidity)}</span></div>\n                                <div className='watchLater-details'><h5>Pressure</h5><span>{Math.floor(city.main.pressure)}{\" \"}M</span></div>\n                                <div className='watchLater-details'><h5>Feels like</h5><span>{Math.floor(city.main.temp - 273.15)+'°'}<strong style={{fontSize:14+'px'}}>C</strong></span></div>\n                            </div>\n                        </div>\n                ))}\n        </div>\n        </Zoom>\n        }\n\n    return(\n        <React.Fragment>\n            {watchlistData}\n        </React.Fragment>\n    )\n}\nexport default Watchlist;","/media/mohammad/New Volume/Programming/VsCode/Practices/React JS/Weather/src/components/City.jsx",[],"/media/mohammad/New Volume/Programming/VsCode/Practices/React JS/Weather/src/components/Daily.jsx",[],"/media/mohammad/New Volume/Programming/VsCode/Practices/React JS/Weather/src/components/Hourly.jsx",["77","78"],"/media/mohammad/New Volume/Programming/VsCode/Practices/React JS/Weather/src/components/PrivateRoute.js",[],"/media/mohammad/New Volume/Programming/VsCode/Practices/React JS/Weather/src/Server.js",[],"/media/mohammad/New Volume/Programming/VsCode/Practices/React JS/Weather/src/components/ForgotPassword.jsx",[],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":5,"column":56,"nodeType":"85","messageId":"86","endLine":5,"endColumn":66},{"ruleId":"87","severity":1,"message":"88","line":69,"column":17,"nodeType":"89","endLine":72,"endColumn":18},{"ruleId":"83","severity":1,"message":"90","line":22,"column":17,"nodeType":"85","messageId":"86","endLine":22,"endColumn":24},{"ruleId":"83","severity":1,"message":"91","line":23,"column":20,"nodeType":"85","messageId":"86","endLine":23,"endColumn":30},{"ruleId":"92","severity":1,"message":"93","line":31,"column":6,"nodeType":"94","endLine":31,"endColumn":8,"suggestions":"95"},{"ruleId":"96","severity":1,"message":"97","line":113,"column":25,"nodeType":"98","messageId":"99","endLine":113,"endColumn":27},{"ruleId":"83","severity":1,"message":"100","line":1,"column":30,"nodeType":"85","messageId":"86","endLine":1,"endColumn":39},{"ruleId":"83","severity":1,"message":"101","line":6,"column":9,"nodeType":"85","messageId":"86","endLine":6,"endColumn":16},{"ruleId":"83","severity":1,"message":"102","line":16,"column":9,"nodeType":"85","messageId":"86","endLine":16,"endColumn":14},{"ruleId":"92","severity":1,"message":"103","line":27,"column":8,"nodeType":"94","endLine":27,"endColumn":21,"suggestions":"104"},{"ruleId":"92","severity":1,"message":"105","line":19,"column":15,"nodeType":"94","endLine":19,"endColumn":17,"suggestions":"106"},{"ruleId":"83","severity":1,"message":"100","line":1,"column":26,"nodeType":"85","messageId":"86","endLine":1,"endColumn":35},{"ruleId":"107","severity":1,"message":"108","line":73,"column":37,"nodeType":"89","endLine":73,"endColumn":100},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'setTime' is assigned a value but never used.","'setDateDay' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getDate' and 'getTime'. Either include them or remove the dependency array.","ArrayExpression",["111"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useEffect' is defined but never used.","'message' is defined but never used.","'error' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history' and 'isLogged'. Either include them or remove the dependency array.",["112"],"React Hook useEffect has a missing dependency: 'loadWatchList'. Either include it or remove the dependency array.",["113"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-global-assign","no-unsafe-negation",{"desc":"114","fix":"115"},{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},"Update the dependencies array to be: [getDate, getTime]",{"range":"120","text":"121"},"Update the dependencies array to be: [currentUser, history, isLogged]",{"range":"122","text":"123"},"Update the dependencies array to be: [loadWatchList]",{"range":"124","text":"125"},[1134,1136],"[getDate, getTime]",[719,732],"[currentUser, history, isLogged]",[431,433],"[loadWatchList]"]